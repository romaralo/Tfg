%% Input parameters. TODO OTRA VEZ ESTÁ EN MM (FÍJATE EN LA LONGITUD DE ONDA)
N=1500; % Number of pixels. SI PONEMOS MENOS PÍXELES NOS SALEN COSAS REPETIDAS, FIGURA SIMILAR PERO MAL.
L=10; % Length of the field of view 
rad=1; % Radius of aperture 
lambda=500e-6; % Wavelength of light 
z=100; %Propagation distance 
%f=1500
k=2*pi/(lambda); % Wavenumber
w=1

%% Coordinate vectors/grids
dx=L/N; % Length of one pixel
x=-L/2:dx:L/2-dx; % Coordinate vector (in meters)
fx=-1/(2*dx):1/L:1/(2*dx)-1/L; % Spatial frequency vector (in 1/meters)

[X,Y]=meshgrid(x,x); % Coordinate grids (real space)
[FX,FY]=meshgrid(fx,fx); % Coordinate grids (Fourier space)

%% Define aperture
R=sqrt(X.^2+Y.^2); % Radial coordinate
Aperture=double(R<rad); % Aperture

A=imread('QWT.png'); %read image file 
A= rgb2gray(A);
A = imresize(A,[N N]);
A=double(A)
figure(4)
imagesc(x,x,A)
colormap('gray')

%% Lens. Transf function.
%f=400
%tA=exp(-1j*k*(X.^2+Y.^2)/(2*f))

%% Calculate propagated field


F_Aperture=ifftshift(fft2(fftshift(A))); %Fourier transform (i.e. angular spectrum) of aperture. No se usa en realidad.

H=exp(1i*z*sqrt(k^2-(2*pi*FX).^2-(2*pi*FY).^2)); % Transfer function e^{i k_z z}

propfield=iF(F_Aperture.*H); % Calculate the propagated field

I=abs(propfield.^2)


%Plot the propagated field
figure(1)
imagesc(x,x,abs(propfield))
colormap('gray')
xlabel('x(mm)')
ylabel('y(mm)')
title(['z = ' num2str(z) 'mm'])
colorbar
axis image
